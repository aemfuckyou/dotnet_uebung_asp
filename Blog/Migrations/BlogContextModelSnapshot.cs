// <auto-generated />
using System;
using Blog.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Blog.Migrations
{
    [DbContext(typeof(BlogContext))]
    partial class BlogContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.2");

            modelBuilder.Entity("Blog.Entities.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Marion",
                            LastName = "Neuhauser"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Hugo",
                            LastName = "Sonderegger"
                        });
                });

            modelBuilder.Entity("Blog.Entities.BlogEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AuthorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PublishingTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Entries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            Content = "dotnet...blabla..... linux... blabla",
                            PublishingTime = new DateTime(2022, 1, 1, 12, 0, 34, 0, DateTimeKind.Unspecified),
                            Title = "Dotnet on Linux"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 2,
                            Content = "dotnet...blabla..... windows... blabla",
                            PublishingTime = new DateTime(2022, 1, 3, 16, 7, 21, 0, DateTimeKind.Unspecified),
                            Title = "Dotnet on Windows"
                        });
                });

            modelBuilder.Entity("Blog.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AuthorId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BlogEntryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PublishingTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("BlogEntryId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 2,
                            BlogEntryId = 1,
                            Content = "good Blog... well written...blabla",
                            PublishingTime = new DateTime(2022, 1, 2, 13, 5, 25, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 1,
                            BlogEntryId = 2,
                            Content = "good Blog... well written...f windows",
                            PublishingTime = new DateTime(2022, 1, 4, 3, 35, 2, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Blog.Entities.BlogEntry", b =>
                {
                    b.HasOne("Blog.Entities.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("Blog.Entities.Comment", b =>
                {
                    b.HasOne("Blog.Entities.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Blog.Entities.BlogEntry", "BlogEntry")
                        .WithMany("Comments")
                        .HasForeignKey("BlogEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("BlogEntry");
                });

            modelBuilder.Entity("Blog.Entities.BlogEntry", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
